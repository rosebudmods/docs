---
import type { Cuboid, CuboidTextures } from '@ts/minecraft';

interface Props {
    cuboid: Cuboid;
}

// change to 60deg for an isometric perspective
// (no i dont understand the matrices either)
const angle = (65 * Math.PI) / 180;
const sin = Math.sin(angle);
const tTop = `translateY(-50%) matrix(-${sin}, 0.5, -${sin}, -0.5, 0, 0)`;
const tFrn = `translate(calc(-50% * ${sin}), 25%) matrix(${sin}, 0.5, 0, 1, 0, 0)`;
const tSde = `translate(calc(50% * ${sin}), 25%) matrix(${sin}, -0.5, 0, 1, 0, 0)`;

const {
    cuboid: { x, y, z, w, h, d, textures },
} = Astro.props;

const assets = import.meta.glob<{ default: ImageMetadata }>(
    '/src/assets/mc-assets/assets/minecraft/textures/block/*.png',
);
const getAsset = async (path: string) => (await assets[path]!()).default.src;
const fromTexture = async (transform: string, texture?: CuboidTextures) =>
    texture &&
    `transform: ${transform}${texture.rotation ? ` rotate(${texture.rotation}deg)` : ''};` +
        `background: url(${await getAsset(texture.path)})`;

const topStyle = await fromTexture(tTop, textures.top);
const frnStyle = await fromTexture(tFrn, textures.front);
const sdeStyle = await fromTexture(tSde, textures.side);
---

<span class="cuboid">
    {topStyle && <span class="face top" style={topStyle} />}
    {frnStyle && <span class="face front" style={frnStyle} />}
    {sdeStyle && <span class="face side" style={sdeStyle} />}
</span>

<style lang="scss">
    .cuboid {
        display: inline-block;
        position: absolute;
        vertical-align: middle;
        width: 1em;
        height: 1em;
    }

    .face {
        position: absolute;
        left: 0.5em;
        width: 1em;
        height: 1em;
        margin: 0 !important;
        background-size: 100% 100%;
        image-rendering: pixelated;
        transform-origin: 50% 50%;

        &.front {
            filter: brightness(0.6);
        }

        &.side {
            filter: brightness(0.4);
        }
    }
</style>
